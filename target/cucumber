[
  {
    "line": 1,
    "elements": [
      {
        "comments": [
          {
            "line": 3,
            "value": "# Test finAllUsers"
          }
        ],
        "line": 4,
        "name": "finAllUsers returns some users",
        "description": "",
        "id": "check-userrepository;finallusers-returns-some-users",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8469249,
              "status": "passed"
            },
            "line": 5,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 355346,
              "status": "passed"
            },
            "line": 6,
            "name": "expected list of users is initialized",
            "match": {
              "location": "UserRepositorySteps.expected_list_of_users_is_initialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 815558,
              "status": "passed"
            },
            "line": 7,
            "name": "finAllUsers() is called",
            "match": {
              "location": "UserRepositorySteps.finallusers_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3479162,
              "status": "passed"
            },
            "line": 8,
            "name": "a list of users is returned for finAllUsers",
            "match": {
              "location": "UserRepositorySteps.a_list_of_users_is_returned_finAllUsers()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 10,
        "name": "finAllUsers returns null",
        "description": "",
        "id": "check-userrepository;finallusers-returns-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2367358,
              "status": "passed"
            },
            "line": 11,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 243120,
              "status": "passed"
            },
            "line": 12,
            "name": "expected null list of users is initialized",
            "match": {
              "location": "UserRepositorySteps.expected_null_list_of_users_is_initialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 665952,
              "status": "passed"
            },
            "line": 13,
            "name": "finAllUsers() is called",
            "match": {
              "location": "UserRepositorySteps.finallusers_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2258405,
              "status": "passed"
            },
            "line": 14,
            "name": "a list of users is null for finAllUsers",
            "match": {
              "location": "UserRepositorySteps.a_list_of_users_is_null_finAllUsers()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 16,
        "name": "finAllUsers returns empty list",
        "description": "",
        "id": "check-userrepository;finallusers-returns-empty-list",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4972146,
              "status": "passed"
            },
            "line": 17,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 92079,
              "status": "passed"
            },
            "line": 18,
            "name": "expected empty list of users is initialized",
            "match": {
              "location": "UserRepositorySteps.expected_empty_list_of_users_is_initialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 809606,
              "status": "passed"
            },
            "line": 19,
            "name": "finAllUsers() is called",
            "match": {
              "location": "UserRepositorySteps.finallusers_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 880493,
              "status": "passed"
            },
            "line": 20,
            "name": "a list of users is empty for finAllUsers",
            "match": {
              "location": "UserRepositorySteps.a_list_of_users_is_empty_finAllUsers()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 22,
            "value": "# Test getUserInfo"
          }
        ],
        "line": 23,
        "name": "getUserInfo returns some users",
        "description": "",
        "id": "check-userrepository;getuserinfo-returns-some-users",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6377300,
              "status": "passed"
            },
            "line": 24,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 76414,
              "status": "passed"
            },
            "line": 25,
            "name": "expected list of users is initialized",
            "match": {
              "location": "UserRepositorySteps.expected_list_of_users_is_initialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1243929,
              "status": "passed"
            },
            "line": 26,
            "name": "getUserInfo() is called",
            "match": {
              "location": "UserRepositorySteps.getuserinfo_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1696676,
              "status": "passed"
            },
            "line": 27,
            "name": "a list of users is returned for getUserInfo",
            "match": {
              "location": "UserRepositorySteps.a_list_of_users_is_returned_for_getuserinfo()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 29,
        "name": "getUserInfo returns null",
        "description": "",
        "id": "check-userrepository;getuserinfo-returns-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2839916,
              "status": "passed"
            },
            "line": 30,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 197212,
              "status": "passed"
            },
            "line": 31,
            "name": "expected null list of users is initialized",
            "match": {
              "location": "UserRepositorySteps.expected_null_list_of_users_is_initialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1083911,
              "status": "passed"
            },
            "line": 32,
            "name": "getUserInfo() is called",
            "match": {
              "location": "UserRepositorySteps.getuserinfo_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1181452,
              "status": "passed"
            },
            "line": 33,
            "name": "a list of users is null for getUserInfo",
            "match": {
              "location": "UserRepositorySteps.a_list_of_users_is_null_for_getUserInfo()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 35,
        "name": "getUserInfo returns empty list",
        "description": "",
        "id": "check-userrepository;getuserinfo-returns-empty-list",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4394360,
              "status": "passed"
            },
            "line": 36,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59802,
              "status": "passed"
            },
            "line": 37,
            "name": "expected empty list of users is initialized",
            "match": {
              "location": "UserRepositorySteps.expected_empty_list_of_users_is_initialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1111620,
              "status": "passed"
            },
            "line": 38,
            "name": "getUserInfo() is called",
            "match": {
              "location": "UserRepositorySteps.getuserinfo_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4704769,
              "status": "passed"
            },
            "line": 39,
            "name": "a list of users is empty for getUserInfo",
            "match": {
              "location": "UserRepositorySteps.a_list_of_users_is_empty_for_getUserInfo()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 41,
            "value": "# Test validateEmail"
          }
        ],
        "line": 42,
        "name": "validateEmail returns some ids",
        "description": "",
        "id": "check-userrepository;validateemail-returns-some-ids",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5296289,
              "status": "passed"
            },
            "line": 43,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 116177,
              "status": "passed"
            },
            "line": 44,
            "name": "expected list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_list_of_ids_is_initialized_ur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 790601,
              "status": "passed"
            },
            "line": 45,
            "name": "validateEmail() is called",
            "match": {
              "location": "UserRepositorySteps.validateemail_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4134082,
              "status": "passed"
            },
            "line": 46,
            "name": "a list of ids is returned for validateEmail",
            "match": {
              "location": "UserRepositorySteps.a_list_of_ids_is_returned_for_validateEmail()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 48,
        "name": "validateEmail returns null",
        "description": "",
        "id": "check-userrepository;validateemail-returns-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3560186,
              "status": "passed"
            },
            "line": 49,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 116387,
              "status": "passed"
            },
            "line": 50,
            "name": "expected null list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_null_list_of_ids_is_initialized_userRepository()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3184544,
              "status": "passed"
            },
            "line": 51,
            "name": "validateEmail() is called",
            "match": {
              "location": "UserRepositorySteps.validateemail_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6619038,
              "status": "passed"
            },
            "line": 52,
            "name": "a list of ids is null for validateEmail",
            "match": {
              "location": "UserRepositorySteps.a_list_of_ids_is_null_for_validateEmail()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 54,
        "name": "validateEmail returns empty list",
        "description": "",
        "id": "check-userrepository;validateemail-returns-empty-list",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1315729,
              "status": "passed"
            },
            "line": 55,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72776,
              "status": "passed"
            },
            "line": 56,
            "name": "expected empty list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_empty_list_of_ids_is_initialized_ur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 693559,
              "status": "passed"
            },
            "line": 57,
            "name": "validateEmail() is called",
            "match": {
              "location": "UserRepositorySteps.validateemail_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 912797,
              "status": "passed"
            },
            "line": 58,
            "name": "a list of ids is empty for validateEmail",
            "match": {
              "location": "UserRepositorySteps.a_list_of_ids_is_empty_for_validateEmail()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 60,
            "value": "# Test addUser"
          }
        ],
        "line": 61,
        "name": "addUser returns some ids for user role",
        "description": "",
        "id": "check-userrepository;adduser-returns-some-ids-for-user-role",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14281030,
              "status": "passed"
            },
            "line": 62,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7193834,
              "status": "passed"
            },
            "line": 63,
            "name": "expected list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_list_of_ids_is_initialized_ur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7528416,
              "status": "passed"
            },
            "line": 64,
            "name": "addUser() is called with user role",
            "match": {
              "location": "UserRepositorySteps.adduser_is_called_with_user_role()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 929648,
              "status": "passed"
            },
            "line": 65,
            "name": "a list of ids is returned for addUser",
            "match": {
              "location": "UserRepositorySteps.a_list_of_ids_is_returned_for_addUser()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 67,
        "name": "addUser returns some ids for NOT user role",
        "description": "",
        "id": "check-userrepository;adduser-returns-some-ids-for-not-user-role",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2396343,
              "status": "passed"
            },
            "line": 68,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 67859,
              "status": "passed"
            },
            "line": 69,
            "name": "expected list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_list_of_ids_is_initialized_ur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 409174,
              "status": "passed"
            },
            "line": 70,
            "name": "addUser() is called with not user role",
            "match": {
              "location": "UserRepositorySteps.adduser_is_called_with_not_user_role()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6939938,
              "status": "passed"
            },
            "line": 71,
            "name": "a list of ids is returned with 1 id for addUser",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 31
                }
              ],
              "location": "UserRepositorySteps.a_list_of_ids_is_returned_with_id_for_addUser(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 73,
        "name": "addUser throws Exception",
        "description": "",
        "id": "check-userrepository;adduser-throws-exception",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1505536,
              "status": "passed"
            },
            "line": 74,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59547,
              "status": "passed"
            },
            "line": 75,
            "name": "expected empty list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_empty_list_of_ids_is_initialized_ur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 832344,
              "status": "passed"
            },
            "line": 76,
            "name": "addUser() is called with Exception",
            "match": {
              "location": "UserRepositorySteps.adduser_is_called_with_exception()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 401022,
              "status": "passed"
            },
            "line": 77,
            "name": "a list of ids is empty for addUser",
            "match": {
              "location": "UserRepositorySteps.a_list_of_ids_is_empty_for_addUser()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 79,
            "value": "# Test verifyUser"
          }
        ],
        "line": 80,
        "name": "verifyUser is called successfully",
        "description": "",
        "id": "check-userrepository;verifyuser-is-called-successfully",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1697205,
              "status": "passed"
            },
            "line": 81,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2832367,
              "status": "passed"
            },
            "line": 82,
            "name": "verifyUser() is called",
            "match": {
              "location": "UserRepositorySteps.verifyuser_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1150413,
              "status": "passed"
            },
            "line": 83,
            "name": "verifyUser is successfully called",
            "match": {
              "location": "UserRepositorySteps.verifyuser_is_successfully_called()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 85,
            "value": "# Test resetPswd"
          }
        ],
        "line": 86,
        "name": "resetPswd is called successfully",
        "description": "",
        "id": "check-userrepository;resetpswd-is-called-successfully",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1227414,
              "status": "passed"
            },
            "line": 87,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 717871,
              "status": "passed"
            },
            "line": 88,
            "name": "resetPswd() is called",
            "match": {
              "location": "UserRepositorySteps.resetpswd_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 993172,
              "status": "passed"
            },
            "line": 89,
            "name": "resetPswd is successfully called",
            "match": {
              "location": "UserRepositorySteps.resetpswd_is_successfully_called()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 91,
            "value": "# Test getPswdInfoWithEmail"
          }
        ],
        "line": 92,
        "name": "getPswdInfoWithEmail returns some passwords",
        "description": "",
        "id": "check-userrepository;getpswdinfowithemail-returns-some-passwords",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1511008,
              "status": "passed"
            },
            "line": 93,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 113275,
              "status": "passed"
            },
            "line": 94,
            "name": "expected list of passwords is initialized",
            "match": {
              "location": "UserRepositorySteps.expected_list_of_passwords_is_initialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 493211,
              "status": "passed"
            },
            "line": 95,
            "name": "getPswdInfoWithEmail() is called",
            "match": {
              "location": "UserRepositorySteps.getpswdinfowithemail_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1013534,
              "status": "passed"
            },
            "line": 96,
            "name": "a list of passwords is returned for getPswdInfoWithEmail",
            "match": {
              "location": "UserRepositorySteps.a_list_of_passwords_is_returned_for_getPswdInfoWithEmail()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 98,
        "name": "getPswdInfoWithEmail returns null",
        "description": "",
        "id": "check-userrepository;getpswdinfowithemail-returns-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4824265,
              "status": "passed"
            },
            "line": 99,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 60842,
              "status": "passed"
            },
            "line": 100,
            "name": "expected null list of passwords is initialized",
            "match": {
              "location": "UserRepositorySteps.expected_null_list_of_passwords_is_initialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 421643,
              "status": "passed"
            },
            "line": 101,
            "name": "getPswdInfoWithEmail() is called",
            "match": {
              "location": "UserRepositorySteps.getpswdinfowithemail_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 599674,
              "status": "passed"
            },
            "line": 102,
            "name": "a list of passwords is null for getPswdInfoWithEmail",
            "match": {
              "location": "UserRepositorySteps.a_list_of_passwords_is_null_for_getPswdInfoWithEmail()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 104,
        "name": "getPswdInfoWithEmail returns empty list",
        "description": "",
        "id": "check-userrepository;getpswdinfowithemail-returns-empty-list",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1522959,
              "status": "passed"
            },
            "line": 105,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62734,
              "status": "passed"
            },
            "line": 106,
            "name": "expected empty list of passwords is initialized",
            "match": {
              "location": "UserRepositorySteps.expected_empty_list_of_passwords_is_initialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2605399,
              "status": "passed"
            },
            "line": 107,
            "name": "getPswdInfoWithEmail() is called",
            "match": {
              "location": "UserRepositorySteps.getpswdinfowithemail_is_called()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 845848,
              "status": "passed"
            },
            "line": 108,
            "name": "a list of passwords is empty for getPswdInfoWithEmail",
            "match": {
              "location": "UserRepositorySteps.a_list_of_passwords_is_empty_for_getPswdInfoWithEmail()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 110,
            "value": "# Test addNewAdmin"
          }
        ],
        "line": 111,
        "name": "addNewAdmin returns some ids",
        "description": "",
        "id": "check-userrepository;addnewadmin-returns-some-ids",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1664111,
              "status": "passed"
            },
            "line": 112,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 57709,
              "status": "passed"
            },
            "line": 113,
            "name": "expected list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_list_of_ids_is_initialized_ur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 448198,
              "status": "passed"
            },
            "line": 114,
            "name": "addNewAdmin() is called for UserRepository",
            "match": {
              "location": "UserRepositorySteps.addnewadmin_is_called_for_UserRepository()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 642876,
              "status": "passed"
            },
            "line": 115,
            "name": "a list of ids is returned for addNewAdmin",
            "match": {
              "location": "UserRepositorySteps.a_list_of_ids_is_returned_for_addNewAdmin()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 117,
        "name": "addNewAdmin throws Exception",
        "description": "",
        "id": "check-userrepository;addnewadmin-throws-exception",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1157402,
              "status": "passed"
            },
            "line": 118,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65262,
              "status": "passed"
            },
            "line": 119,
            "name": "expected empty list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_empty_list_of_ids_is_initialized_ur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2601302,
              "status": "passed"
            },
            "line": 120,
            "name": "addNewAdmin() is called with Exception for UserRepository",
            "match": {
              "location": "UserRepositorySteps.addnewadmin_is_called_with_Exception_for_UserRepository()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3869735,
              "status": "passed"
            },
            "line": 121,
            "name": "a list of ids is empty for UserRepository",
            "match": {
              "location": "UserRepositorySteps.a_list_of_ids_is_empty_for_UserRepository()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 123,
            "value": "# Test addNewManager"
          }
        ],
        "line": 124,
        "name": "addNewManager returns some ids",
        "description": "",
        "id": "check-userrepository;addnewmanager-returns-some-ids",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3346492,
              "status": "passed"
            },
            "line": 125,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 93151,
              "status": "passed"
            },
            "line": 126,
            "name": "expected list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_list_of_ids_is_initialized_ur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 637521,
              "status": "passed"
            },
            "line": 127,
            "name": "addNewManager() is called for UserRepository",
            "match": {
              "location": "UserRepositorySteps.addnewmanager_is_called_for_UserRepository()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2244853,
              "status": "passed"
            },
            "line": 128,
            "name": "a list of ids is returned for addNewManager in UserRepository",
            "match": {
              "location": "UserRepositorySteps.a_list_of_ids_is_returned_for_addNewManager_in_UserRepository()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 130,
        "name": "addNewManager throws Exception",
        "description": "",
        "id": "check-userrepository;addnewmanager-throws-exception",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2958006,
              "status": "passed"
            },
            "line": 131,
            "name": "mock UserRepository is initialized",
            "match": {
              "location": "UserRepositorySteps.mock_userrepository_is_initialized()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 204319,
              "status": "passed"
            },
            "line": 132,
            "name": "expected empty list of ids is initialized for UserRepository",
            "match": {
              "location": "UserRepositorySteps.expected_empty_list_of_ids_is_initialized_ur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 343594,
              "status": "passed"
            },
            "line": 133,
            "name": "addNewManager() is called with Exception for UserRepository",
            "match": {
              "location": "UserRepositorySteps.addnewmanager_is_called_with_Exception_for_UserRepository()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 502433,
              "status": "passed"
            },
            "line": 134,
            "name": "a list of ids is empty for addNewManager in UserRepository",
            "match": {
              "location": "UserRepositorySteps.a_list_of_ids_is_empty_for_addNewManager_in_UserRepository()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check UserRepository",
    "description": "",
    "id": "check-userrepository",
    "keyword": "Feature",
    "uri": "cucumber/UserRepository.feature"
  }
]